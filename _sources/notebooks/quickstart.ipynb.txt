{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "875bf416",
   "metadata": {},
   "source": [
    "# Quick start\n",
    "\n",
    "First, lets just run through some examples to see where we are going\n",
    "by simulating a simple example population which we observe as a\n",
    "survey. Let's say we are in a giant sphere surrounded by fire flies\n",
    "that fill the volume homogeneously. Furthermore, the light they emit\n",
    "follows a Pareto distribution (power law) in luminosity. Of course,\n",
    "this population can be anything; active galactic nuclei (AGN),\n",
    "gamma-ray bursts (GRBs), etc. The framework provided in popsynth is\n",
    "intended to be generic."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "063e9f79",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-02-10T11:06:58.159304Z",
     "iopub.status.busy": "2022-02-10T11:06:58.157238Z",
     "iopub.status.idle": "2022-02-10T11:07:01.227863Z",
     "shell.execute_reply": "2022-02-10T11:07:01.226973Z"
    }
   },
   "outputs": [],
   "source": [
    "%matplotlib inline\n",
    "\n",
    "\n",
    "import matplotlib.pyplot as plt\n",
    "from jupyterthemes import jtplot\n",
    "\n",
    "jtplot.style(context=\"notebook\", fscale=1, grid=False)\n",
    "purple = \"#B833FF\"\n",
    "yellow = \"#F6EF5B\"\n",
    "\n",
    "import popsynth\n",
    "\n",
    "popsynth.update_logging_level(\"INFO\")\n",
    "\n",
    "import networkx as nx\n",
    "import numpy as np\n",
    "import warnings\n",
    "\n",
    "warnings.simplefilter(\"ignore\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "adaf6006",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-02-10T11:07:01.230763Z",
     "iopub.status.busy": "2022-02-10T11:07:01.230213Z",
     "iopub.status.idle": "2022-02-10T11:07:01.238374Z",
     "shell.execute_reply": "2022-02-10T11:07:01.238742Z"
    },
    "lines_to_next_cell": 0,
    "nbsphinx": "hidden"
   },
   "outputs": [],
   "source": [
    "class DemoSampler(popsynth.AuxiliarySampler):\n",
    "    _auxiliary_sampler_name = \"DemoSampler\"\n",
    "    mu = popsynth.auxiliary_sampler.AuxiliaryParameter(default=2)\n",
    "    tau = popsynth.auxiliary_sampler.AuxiliaryParameter(default=1, vmin=0)\n",
    "\n",
    "    def __init__(self):\n",
    "\n",
    "        super(DemoSampler, self).__init__(\"demo\", observed=False)\n",
    "\n",
    "    def true_sampler(self, size):\n",
    "\n",
    "        self._true_values = np.random.normal(self.mu, self.tau, size=size)\n",
    "\n",
    "\n",
    "class DemoSampler2(popsynth.DerivedLumAuxSampler):\n",
    "    _auxiliary_sampler_name = \"DemoSampler2\"\n",
    "    mu = popsynth.auxiliary_sampler.AuxiliaryParameter(default=2)\n",
    "    tau = popsynth.auxiliary_sampler.AuxiliaryParameter(default=1, vmin=0)\n",
    "    sigma = popsynth.auxiliary_sampler.AuxiliaryParameter(default=1, vmin=0)\n",
    "\n",
    "    def __init__(self):\n",
    "\n",
    "        super(DemoSampler2, self).__init__(\"demo2\")\n",
    "\n",
    "    def true_sampler(self, size):\n",
    "\n",
    "        secondary = self._secondary_samplers[\"demo\"]\n",
    "\n",
    "        self._true_values = (\n",
    "            (np.random.normal(self.mu, self.tau, size=size))\n",
    "            + secondary.true_values\n",
    "            - np.log10(1 + self._distance)\n",
    "        )\n",
    "\n",
    "    def observation_sampler(self, size):\n",
    "\n",
    "        self._obs_values = self._true_values + np.random.normal(\n",
    "            0, self.sigma, size=size\n",
    "        )\n",
    "\n",
    "    def compute_luminosity(self):\n",
    "\n",
    "        secondary = self._secondary_samplers[\"demo\"]\n",
    "\n",
    "        return (10 ** (self._true_values + 54)) / secondary.true_values"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0ad6a6ce",
   "metadata": {},
   "source": []
  },
  {
   "cell_type": "markdown",
   "id": "811dfb37",
   "metadata": {},
   "source": [
    "## A spherically homogenous population of fire flies with a pareto luminosity function\n",
    "\n",
    "**popsynth** comes with several types of populations included, though\n",
    "you can easily [construct your\n",
    "own](https://popsynth.readthedocs.io/en/latest/notebooks/custom.html). To\n",
    "access the built in population synthesizers, one simply instantiates\n",
    "the population from the **popsynth.populations** module. Here, we will\n",
    "simulate a survey that has a homogenous spherical spatial distribution\n",
    "and a pareto distributed luminosity."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "39055043",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-02-10T11:07:01.243852Z",
     "iopub.status.busy": "2022-02-10T11:07:01.242820Z",
     "iopub.status.idle": "2022-02-10T11:07:01.245852Z",
     "shell.execute_reply": "2022-02-10T11:07:01.245461Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Luminosity Function\n",
      "pareto\n",
      "\\frac{\\alpha L_{\\rm min}^{\\alpha}}{L^{\\alpha+1}}\n",
      "Lmin: 1\n",
      "alpha: 2.0\n",
      "Spatial Function\n",
      "cons_sphere\n",
      "\\Lambda\n",
      "Lambda: 5\n",
      "r_max: 5\n",
      "\n"
     ]
    }
   ],
   "source": [
    "homogeneous_pareto_synth = popsynth.populations.ParetoHomogeneousSphericalPopulation(\n",
    "    Lambda=5, Lmin=1, alpha=2.0  # the density normalization  # lower bound on the LF\n",
    ")  # index of the LF\n",
    "\n",
    "print(homogeneous_pareto_synth)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "59573cac",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-02-10T11:07:01.251725Z",
     "iopub.status.busy": "2022-02-10T11:07:01.250762Z",
     "iopub.status.idle": "2022-02-10T11:07:01.264462Z",
     "shell.execute_reply": "2022-02-10T11:07:01.264823Z"
    },
    "lines_to_next_cell": 2
   },
   "outputs": [
    {
     "data": {
      "text/markdown": [
       "## Luminosity Function"
      ],
      "text/plain": [
       "<IPython.core.display.Markdown object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/latex": [
       "$\\displaystyle \\frac{\\alpha L_{\\rm min}^{\\alpha}}{L^{\\alpha+1}}$"
      ],
      "text/plain": [
       "<IPython.core.display.Math object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>parameter</th>\n",
       "      <th>value</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Lmin</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>alpha</td>\n",
       "      <td>2.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  parameter  value\n",
       "0      Lmin    1.0\n",
       "1     alpha    2.0"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/markdown": [
       "## Spatial Function"
      ],
      "text/plain": [
       "<IPython.core.display.Markdown object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/latex": [
       "$\\displaystyle \\Lambda$"
      ],
      "text/plain": [
       "<IPython.core.display.Math object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>parameter</th>\n",
       "      <th>value</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Lambda</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>r_max</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  parameter  value\n",
       "0    Lambda      5\n",
       "1     r_max      5"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "homogeneous_pareto_synth.display()\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f6a571ba",
   "metadata": {},
   "source": [
    "If you have [networkx](https://networkx.org) and\n",
    "[graviz](https://graphviz.readthedocs.io/en/stable/), you can plot a\n",
    "graph of the connections."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "cd1f4a05",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-02-10T11:07:01.268982Z",
     "iopub.status.busy": "2022-02-10T11:07:01.268528Z",
     "iopub.status.idle": "2022-02-10T11:07:01.401081Z",
     "shell.execute_reply": "2022-02-10T11:07:01.401728Z"
    },
    "lines_to_next_cell": 2
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 576x504 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# we can also display a graph of the object\n",
    "\n",
    "\n",
    "options = {\"node_color\": purple, \"node_size\": 3000, \"width\": 0.5}\n",
    "\n",
    "pos = nx.drawing.nx_agraph.graphviz_layout(homogeneous_pareto_synth.graph, prog=\"dot\")\n",
    "\n",
    "nx.draw(homogeneous_pareto_synth.graph, with_labels=True, pos=pos, **options)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "38687e4e",
   "metadata": {},
   "source": [
    "## Creating a survey\n",
    "\n",
    "We can now sample from this population with the **draw_survey**\n",
    "function, but first we need specify how the flux is selected by adding\n",
    "a flux selection function. Here, we will use a hard selection function\n",
    "in this example, but you [can make your\n",
    "own](https://popsynth.readthedocs.io/en/latest/notebooks/selections.html#custom-selections). The\n",
    "selection function will mark objects with **observed** fluxes below\n",
    "the selection boundary as \"hidden\", but we will still have access to\n",
    "them in our population. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "8594be6d",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-02-10T11:07:01.404565Z",
     "iopub.status.busy": "2022-02-10T11:07:01.404123Z",
     "iopub.status.idle": "2022-02-10T11:07:01.407560Z",
     "shell.execute_reply": "2022-02-10T11:07:01.408153Z"
    },
    "lines_to_next_cell": 0
   },
   "outputs": [],
   "source": [
    "flux_selector = popsynth.HardFluxSelection()\n",
    "flux_selector.boundary = 1e-2\n",
    "\n",
    "homogeneous_pareto_synth.set_flux_selection(flux_selector)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "dad75111",
   "metadata": {},
   "source": [
    "And by observed fluxes, we mean those where the latent flux is obscured by observational error, here we sample the observational error from a log normal distribution with $\\sigma=1$. In the future, ```popsynth``` will have more options."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "42d972e3",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-02-10T11:07:01.411920Z",
     "iopub.status.busy": "2022-02-10T11:07:01.411328Z",
     "iopub.status.idle": "2022-02-10T11:07:01.564018Z",
     "shell.execute_reply": "2022-02-10T11:07:01.564389Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[32m\u001b[1m INFO     \u001b[0m| \u001b[32m\u001b[1m The volume integral is 2617.993878 \u001b[0m\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "3d58ac77b6284565bee47b83e8e3580e",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Drawing distances:   0%|          | 0/2567 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[32m\u001b[1m INFO     \u001b[0m| \u001b[32m\u001b[1m Expecting 2567 total objects \u001b[0m\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[32m\u001b[1m INFO     \u001b[0m| \u001b[32m\u001b[1m applying selection to fluxes \u001b[0m\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[32m\u001b[1m INFO     \u001b[0m| \u001b[32m\u001b[1m Detected 573 distances \u001b[0m\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[32m\u001b[1m INFO     \u001b[0m| \u001b[32m\u001b[1m Detected 573 objects out to a distance of 4.99 \u001b[0m\n"
     ]
    }
   ],
   "source": [
    "population = homogeneous_pareto_synth.draw_survey(flux_sigma=0.1)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8a529bd1",
   "metadata": {},
   "source": [
    "We now have created a population survey. How did we get here?\n",
    "\n",
    "* Once the spatial and luminosity functions are specified, we can integrate out to a given distance and compute the number of expected objects.\n",
    "\n",
    "* A Poisson draw with this mean is made to determine the number of total objects in the survey.\n",
    "\n",
    "* Next all quantities are sampled (distance, luminosity)\n",
    "\n",
    "* If needed, the luminosity is converted to a flux with a given observational error\n",
    "\n",
    "* The selection function (in this case a hard cutoff) is applied\n",
    "\n",
    "* A population object is created\n",
    "\n",
    "We could have specified a soft cutoff (an inverse logit) with logarithmic with as well:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "71242d2b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-02-10T11:07:01.568604Z",
     "iopub.status.busy": "2022-02-10T11:07:01.568005Z",
     "iopub.status.idle": "2022-02-10T11:07:01.704629Z",
     "shell.execute_reply": "2022-02-10T11:07:01.704256Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[33m\u001b[2m WARNING  \u001b[0m| \u001b[33m\u001b[2m removing all registered Auxiliary Samplers \u001b[0m\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[33m\u001b[2m WARNING  \u001b[0m| \u001b[33m\u001b[2m removing flux selector \u001b[0m\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[33m\u001b[2m WARNING  \u001b[0m| \u001b[33m\u001b[2m removing distance selector \u001b[0m\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[33m\u001b[2m WARNING  \u001b[0m| \u001b[33m\u001b[2m removing spatial selector \u001b[0m\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[32m\u001b[1m INFO     \u001b[0m| \u001b[32m\u001b[1m The volume integral is 2617.993878 \u001b[0m\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "76ec56e9798249b3bd8d4f397a7addd8",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Drawing distances:   0%|          | 0/2567 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[32m\u001b[1m INFO     \u001b[0m| \u001b[32m\u001b[1m Expecting 2567 total objects \u001b[0m\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[32m\u001b[1m INFO     \u001b[0m| \u001b[32m\u001b[1m applying selection to fluxes \u001b[0m\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[32m\u001b[1m INFO     \u001b[0m| \u001b[32m\u001b[1m Detected 609 distances \u001b[0m\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[32m\u001b[1m INFO     \u001b[0m| \u001b[32m\u001b[1m Detected 609 objects out to a distance of 4.99 \u001b[0m\n"
     ]
    }
   ],
   "source": [
    "homogeneous_pareto_synth.clean()\n",
    "flux_selector = popsynth.SoftFluxSelection()\n",
    "flux_selector.boundary = 1e-2\n",
    "flux_selector.strength = 20\n",
    "\n",
    "\n",
    "homogeneous_pareto_synth.set_flux_selection(flux_selector)\n",
    "\n",
    "population = homogeneous_pareto_synth.draw_survey(flux_sigma=0.1)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "bdc48be9",
   "metadata": {},
   "source": [
    "More detail on the [process behind the\n",
    "simulation](https://popsynth.readthedocs.io/en/latest/notebooks/distributions.html#Core-Concept)\n",
    "can be found deeper in the documentation\n",
    "\n",
    "## The Population Object\n",
    "\n",
    "The population object stores all the information about the sampled\n",
    "survey. This includes information on the latent parameters, measured\n",
    "parameters, and distances for both the selected and non-selected\n",
    "objects."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "440fd64f",
   "metadata": {},
   "source": [
    "We can have a look at the flux-distance distribution from the\n",
    "survey. Here, yellow dots are the *latent* flux value, i.e., without\n",
    "observational noise, and purple dots are the *measured values for the\n",
    "*selected* objects. Arrows point from the latent to measured values."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "23a09356",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-02-10T11:07:01.708712Z",
     "iopub.status.busy": "2022-02-10T11:07:01.708249Z",
     "iopub.status.idle": "2022-02-10T11:07:02.865256Z",
     "shell.execute_reply": "2022-02-10T11:07:02.865631Z"
    }
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 576x504 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig = population.display_fluxes(obs_color=purple, true_color=yellow)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f6af641f",
   "metadata": {},
   "source": [
    "For fun, we can display the fluxes on in a simulated universe in 3D"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "5663bc0a",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-02-10T11:07:02.881720Z",
     "iopub.status.busy": "2022-02-10T11:07:02.867664Z",
     "iopub.status.idle": "2022-02-10T11:07:03.167696Z",
     "shell.execute_reply": "2022-02-10T11:07:03.166451Z"
    }
   },
   "outputs": [
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "df5d9a51e3394910bdb72daa26bc4110",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "VBox(children=(Figure(camera=PerspectiveCamera(fov=46.0, position=(0.0, 0.0, 2.0), projectionMatrix=(1.0, 0.0,…"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig = population.display_obs_fluxes_sphere(background_color=\"black\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ebb37e04",
   "metadata": {},
   "source": [
    "The population object stores a lot of information. For example, an array of selection booleans:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "c72dea46",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-02-10T11:07:03.172480Z",
     "iopub.status.busy": "2022-02-10T11:07:03.172011Z",
     "iopub.status.idle": "2022-02-10T11:07:03.174293Z",
     "shell.execute_reply": "2022-02-10T11:07:03.174653Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([False, False, False, ..., False, False, False])"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "population.selection"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3c01a68f",
   "metadata": {},
   "source": [
    "We can retrieve selected and non-selected distances:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "0584ecdc",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-02-10T11:07:03.178663Z",
     "iopub.status.busy": "2022-02-10T11:07:03.177697Z",
     "iopub.status.idle": "2022-02-10T11:07:03.179205Z",
     "shell.execute_reply": "2022-02-10T11:07:03.179570Z"
    }
   },
   "outputs": [],
   "source": [
    "distances = population.selected_distances"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "9e97f325",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-02-10T11:07:03.183266Z",
     "iopub.status.busy": "2022-02-10T11:07:03.182280Z",
     "iopub.status.idle": "2022-02-10T11:07:03.183786Z",
     "shell.execute_reply": "2022-02-10T11:07:03.184141Z"
    }
   },
   "outputs": [],
   "source": [
    "hidden_distances = population.hidden_distances"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "0b920944",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-02-10T11:07:03.197547Z",
     "iopub.status.busy": "2022-02-10T11:07:03.196029Z",
     "iopub.status.idle": "2022-02-10T11:07:03.362521Z",
     "shell.execute_reply": "2022-02-10T11:07:03.361800Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0.5, 0, 'z')"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 576x504 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig, ax = plt.subplots()\n",
    "\n",
    "bins = np.linspace(0, 6, 20)\n",
    "\n",
    "\n",
    "ax.hist(hidden_distances, bins=bins, fc=yellow, ec=\"k\",lw=1)\n",
    "ax.hist(distances, bins=bins, fc=purple, ec=\"k\",lw=1)\n",
    "ax.set_xlabel(\"z\")\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "74d106a9",
   "metadata": {},
   "source": [
    "## Saving the population\n",
    "We can record the results of a population synth to an HDF5 file that\n",
    "maintains all the information from the run. The true values of the\n",
    "population parameters are always stored in the truth dictionary:\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "42b8d0b8",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-02-10T11:07:03.366472Z",
     "iopub.status.busy": "2022-02-10T11:07:03.366033Z",
     "iopub.status.idle": "2022-02-10T11:07:03.371029Z",
     "shell.execute_reply": "2022-02-10T11:07:03.370261Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'cons_sphere': {'Lambda': 5, 'r_max': 5}, 'pareto': {'Lmin': 1, 'alpha': 2.0}}"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "population.truth"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "0b9c9c16",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-02-10T11:07:03.374906Z",
     "iopub.status.busy": "2022-02-10T11:07:03.374470Z",
     "iopub.status.idle": "2022-02-10T11:07:03.387940Z",
     "shell.execute_reply": "2022-02-10T11:07:03.387553Z"
    }
   },
   "outputs": [],
   "source": [
    "population.writeto(\"saved_pop.h5\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "700abcf4",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-02-10T11:07:03.391659Z",
     "iopub.status.busy": "2022-02-10T11:07:03.391217Z",
     "iopub.status.idle": "2022-02-10T11:07:03.413034Z",
     "shell.execute_reply": "2022-02-10T11:07:03.412624Z"
    }
   },
   "outputs": [],
   "source": [
    "reloaded_population = popsynth.Population.from_file(\"saved_pop.h5\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "ff7c6858",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-02-10T11:07:03.418056Z",
     "iopub.status.busy": "2022-02-10T11:07:03.417166Z",
     "iopub.status.idle": "2022-02-10T11:07:03.420097Z",
     "shell.execute_reply": "2022-02-10T11:07:03.419704Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'cons_sphere': {'Lambda': 5, 'r_max': 5}, 'pareto': {'Lmin': 1, 'alpha': 2.0}}"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "reloaded_population.truth"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "18d2163a",
   "metadata": {},
   "source": [
    "## Creating populations from YAML files\n",
    "\n",
    "It is sometimes easier to quickly write down population in a YAML file\n",
    "without having to create all the objects in python. Let's a take a\n",
    "look at the format:\n",
    "\n",
    "```yaml\n",
    "\n",
    "# the seed\n",
    "seed: 1234\n",
    "\n",
    "# specifiy the luminosity distribution\n",
    "# and it's parmeters\n",
    "luminosity distribution:\n",
    "    ParetoDistribution:\n",
    "        Lmin: 1e51\n",
    "        alpha: 2\n",
    "\n",
    "# specifiy the flux selection function\n",
    "# and it's parmeters\n",
    "flux selection:\n",
    "    HardFluxSelection:\n",
    "        boundary: 1e-6\n",
    "\n",
    "# specifiy the spatial distribution\n",
    "# and it's parmeters\n",
    "\n",
    "spatial distribution:\n",
    "    ZPowerCosmoDistribution:\n",
    "        Lambda: .5\n",
    "        delta: -2\n",
    "        r_max: 5\n",
    "\n",
    "# specify the distance selection function\n",
    "# and it's parmeters\n",
    "distance selection:\n",
    "    BernoulliSelection:\n",
    "        probability: 0.5\n",
    "\n",
    "# a spatial selection if needed\n",
    "spatial selection:\n",
    "    # None\n",
    "\n",
    "\n",
    "# all the auxiliary functions\n",
    "# these must be known to the\n",
    "# registry at run time if\n",
    "# the are custom!\n",
    "\n",
    "auxiliary samplers:\n",
    "    stellar_mass\n",
    "        type: NormalAuxSampler\n",
    "        observed: False\n",
    "        mu: 0\n",
    "        sigma: 1\n",
    "        selection:\n",
    "        secondary:\n",
    "        init variables:\n",
    "\n",
    "    demo:\n",
    "        type: DemoSampler\n",
    "        observed: False\n",
    "        selection:\n",
    "            UpperBound:\n",
    "                boundary: 20\n",
    "\n",
    "    demo2:\n",
    "        type: DemoSampler2\n",
    "        observed: True\n",
    "        selection:\n",
    "        secondary: [demo, stellar_mass] # other samplers that this sampler depends on\n",
    "\n",
    "\n",
    "```\n",
    "\n",
    "We can load this yaml file into a population synth. We use a saved file to demonstrate:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "96a003c9",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-02-10T11:07:03.423534Z",
     "iopub.status.busy": "2022-02-10T11:07:03.423070Z",
     "iopub.status.idle": "2022-02-10T11:07:03.433377Z",
     "shell.execute_reply": "2022-02-10T11:07:03.433734Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[32m\u001b[1m INFO     \u001b[0m| \u001b[32m\u001b[1m registering derived luminosity sampler: demo2 \u001b[0m\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Luminosity Function\n",
      "demo2\n",
      "observed: True\n",
      "demo\n",
      "stellar_mass\n",
      "Spatial Function\n",
      "zpow_cosmo\n",
      "\\Lambda (z+1)^{\\delta}\n",
      "Lambda: 0.5\n",
      "delta: -2.0\n",
      "r_max: 5.0\n",
      "demo\n",
      "observed: False\n",
      "parents: ['demo2']\n",
      "stellar_mass\n",
      "observed: False\n",
      "mu: 0.0\n",
      "sigma: 1.0\n",
      "parents: ['demo2']\n",
      "\n"
     ]
    }
   ],
   "source": [
    "my_file = popsynth.utils.package_data.get_path_of_data_file(\"pop.yml\")\n",
    "\n",
    "ps = popsynth.PopulationSynth.from_file(my_file)\n",
    "\n",
    "print(ps)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "127e8e16",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-02-10T11:07:03.437482Z",
     "iopub.status.busy": "2022-02-10T11:07:03.437024Z",
     "iopub.status.idle": "2022-02-10T11:07:03.456339Z",
     "shell.execute_reply": "2022-02-10T11:07:03.456696Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/markdown": [
       "## Luminosity Function"
      ],
      "text/plain": [
       "<IPython.core.display.Markdown object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>parameter</th>\n",
       "      <th>value</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "Empty DataFrame\n",
       "Columns: [parameter, value]\n",
       "Index: []"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/markdown": [
       "## Spatial Function"
      ],
      "text/plain": [
       "<IPython.core.display.Markdown object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/latex": [
       "$\\displaystyle \\Lambda (z+1)^{\\delta}$"
      ],
      "text/plain": [
       "<IPython.core.display.Math object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>parameter</th>\n",
       "      <th>value</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Lambda</td>\n",
       "      <td>0.5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>delta</td>\n",
       "      <td>-2.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>r_max</td>\n",
       "      <td>5.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  parameter  value\n",
       "0    Lambda    0.5\n",
       "1     delta   -2.0\n",
       "2     r_max    5.0"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/markdown": [
       "## demo"
      ],
      "text/plain": [
       "<IPython.core.display.Markdown object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>parameter</th>\n",
       "      <th>value</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "Empty DataFrame\n",
       "Columns: [parameter, value]\n",
       "Index: []"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/markdown": [
       "## stellar_mass"
      ],
      "text/plain": [
       "<IPython.core.display.Markdown object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>parameter</th>\n",
       "      <th>value</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>mu</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>sigma</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  parameter  value\n",
       "0        mu    0.0\n",
       "1     sigma    1.0"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "ps.display()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "81fdea2d",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-02-10T11:07:03.460995Z",
     "iopub.status.busy": "2022-02-10T11:07:03.460546Z",
     "iopub.status.idle": "2022-02-10T11:07:03.600152Z",
     "shell.execute_reply": "2022-02-10T11:07:03.600814Z"
    },
    "lines_to_next_cell": 2
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 576x504 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "options = {\"node_color\": purple, \"node_size\": 3000, \"width\": 0.5}\n",
    "\n",
    "pos = nx.drawing.nx_agraph.graphviz_layout(ps.graph, prog=\"dot\")\n",
    "\n",
    "nx.draw(ps.graph, with_labels=True, pos=pos, **options)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e44a08e6",
   "metadata": {},
   "source": [
    "We can see that our population was created correctly for us.\n",
    "\n",
    "\n",
    "Now, this means we can easily pass populations around to our collaborators for testing"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "e5a97a03",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-02-10T11:07:03.603938Z",
     "iopub.status.busy": "2022-02-10T11:07:03.603017Z",
     "iopub.status.idle": "2022-02-10T11:07:07.612294Z",
     "shell.execute_reply": "2022-02-10T11:07:07.606649Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[32m\u001b[1m INFO     \u001b[0m| \u001b[32m\u001b[1m The volume integral is 3.570283 \u001b[0m\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "a35ff7a5beab46818017c27f9e637200",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Drawing distances:   0%|          | 0/5 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[32m\u001b[1m INFO     \u001b[0m| \u001b[32m\u001b[1m Expecting 5 total objects \u001b[0m\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[32m\u001b[1m INFO     \u001b[0m| \u001b[32m\u001b[1m Sampling: demo2 \u001b[0m\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[32m\u001b[1m INFO     \u001b[0m| \u001b[32m\u001b[1m demo2 is sampling its secondary quantities \u001b[0m\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[32m\u001b[1m INFO     \u001b[0m| \u001b[32m\u001b[1m Sampling: demo \u001b[0m\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[32m\u001b[1m INFO     \u001b[0m| \u001b[32m\u001b[1m Sampling: stellar_mass \u001b[0m\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[32m\u001b[1m INFO     \u001b[0m| \u001b[32m\u001b[1m Getting luminosity from derived sampler \u001b[0m\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[32m\u001b[1m INFO     \u001b[0m| \u001b[32m\u001b[1m applying selection to fluxes \u001b[0m\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[32m\u001b[1m INFO     \u001b[0m| \u001b[32m\u001b[1m Applying selection from demo which selected 5 of 5 objects \u001b[0m\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[32m\u001b[1m INFO     \u001b[0m| \u001b[32m\u001b[1m Before auxiliary selection there were 5 objects selected \u001b[0m\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[33m\u001b[2m WARNING  \u001b[0m| \u001b[33m\u001b[2m NO HIDDEN OBJECTS \u001b[0m\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "84e0899d14f94b1c98e04903cc57450f",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Selecting Bernoulli:   0%|          | 0/5 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[32m\u001b[1m INFO     \u001b[0m| \u001b[32m\u001b[1m Detected 3 distances \u001b[0m\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[32m\u001b[1m INFO     \u001b[0m| \u001b[32m\u001b[1m Detected 5 objects out to a distance of 3.37 \u001b[0m\n"
     ]
    }
   ],
   "source": [
    "pop = ps.draw_survey(flux_sigma=0.5)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "398857a3",
   "metadata": {},
   "source": [
    "Now, since we can read the population synth from a file, we can also write one we have created with classes to a file:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "1d51f31a",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-02-10T11:07:07.614746Z",
     "iopub.status.busy": "2022-02-10T11:07:07.614298Z",
     "iopub.status.idle": "2022-02-10T11:07:07.619436Z",
     "shell.execute_reply": "2022-02-10T11:07:07.619009Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'seed': 1234,\n",
       " 'spatial distribution': {'ZPowerCosmoDistribution': {'Lambda': 0.5,\n",
       "   'delta': -2.0,\n",
       "   'r_max': 5.0},\n",
       "  'is_rate': True},\n",
       " 'luminosity distribution': {'ParetoDistribution': {'Lmin': 1e+51,\n",
       "   'alpha': 2.0}},\n",
       " 'flux selection': {'HardFluxSelection': {'boundary': 1e-06}},\n",
       " 'distance selection': {'BernoulliSelection': {'probability': 0.5}},\n",
       " 'auxiliary samplers': {}}"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ps.to_dict()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "eb1d992d",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-02-10T11:07:07.625128Z",
     "iopub.status.busy": "2022-02-10T11:07:07.624119Z",
     "iopub.status.idle": "2022-02-10T11:07:07.625647Z",
     "shell.execute_reply": "2022-02-10T11:07:07.626006Z"
    }
   },
   "outputs": [],
   "source": [
    "ps.write_to(\"/tmp/my_pop_synth.yml\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d4c8adea",
   "metadata": {},
   "source": [
    "but our population synth is also serialized to our population!"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "b633be04",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-02-10T11:07:07.630127Z",
     "iopub.status.busy": "2022-02-10T11:07:07.629683Z",
     "iopub.status.idle": "2022-02-10T11:07:07.632269Z",
     "shell.execute_reply": "2022-02-10T11:07:07.631907Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'seed': 1234,\n",
       " 'spatial distribution': {'ZPowerCosmoDistribution': {'Lambda': 0.5,\n",
       "   'delta': -2.0,\n",
       "   'r_max': 5.0},\n",
       "  'is_rate': True},\n",
       " 'luminosity distribution': {'ParetoDistribution': {'Lmin': 1e+51,\n",
       "   'alpha': 2.0}},\n",
       " 'flux selection': {'HardFluxSelection': {'boundary': 1e-06}},\n",
       " 'distance selection': {'BernoulliSelection': {'probability': 0.5}},\n",
       " 'auxiliary samplers': {}}"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pop.pop_synth"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3a6a5c21",
   "metadata": {},
   "source": [
    "Therefore we always know exactly how we simulated our data."
   ]
  }
 ],
 "metadata": {
  "jupytext": {
   "formats": "ipynb,md"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.10"
  },
  "widgets": {
   "application/vnd.jupyter.widget-state+json": {
    "state": {
     "0177c115277943408e6371a56932e944": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "1.5.0",
       "_view_name": "ProgressView",
       "bar_style": "success",
       "description": "",
       "description_tooltip": null,
       "layout": "IPY_MODEL_81efada57a524b009c73f16cccd77058",
       "max": 2567.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_c066d19a883540198a8c56360b35cbd9",
       "value": 2567.0
      }
     },
     "02bff696b6984ff7bf01841e1b57fc30": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "1.5.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_tooltip": null,
       "layout": "IPY_MODEL_e0b5649b8af448d0b84d5d28dd0d8855",
       "placeholder": "​",
       "style": "IPY_MODEL_ff77af7fb6db49cea7546b95245f0818",
       "value": " 5/5 [00:00&lt;00:00, 269.12it/s]"
      }
     },
     "0563123264b14714b9a1b9abe192c416": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "1.5.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_tooltip": null,
       "layout": "IPY_MODEL_76e6b009ba2148818b80db6c0e50f8e6",
       "placeholder": "​",
       "style": "IPY_MODEL_8522aeb3feb44050be23cbdbe06f555a",
       "value": " 2567/2567 [00:00&lt;00:00, 33058.87it/s]"
      }
     },
     "062329f2aea34033bd5e82b0deb2f91d": {
      "buffers": [
       {
        "data": "",
        "encoding": "base64",
        "path": [
         "color",
         0,
         "data"
        ]
       },
       {
        "data": "KaonQCnaf8Cvebu/HJdCvtZ6fD6F+UM/v4lKQAwPYb+w2JK/K+5yP6YX9L51Quq+/LdhwNZe+L8t7xg/wlPkPEo7iL8/uCo/20Q4wC3W5j9iLcG+c/30P7+UIUBO0aG/3qruvHLuB8B5eCrAST4fPwVO4L6LRmc/DTcAP2B+qb8NHNM/ks+5PwcQj79DfhFA4J/xPfW16D8lk+I/BPfCP5Mvfb+ZI3HA9G+PP8X9zT+RSg8+K86Dv9M/B8AOGgw/bH2Xv/FZ2L5jzwFAskHlPr+K+b92WDo/a2V6QD1izD7Yzfi+jsEMQMY0jb+OO/U+FQU4v4+rGsDKkBnAoIUhvxfa4b/ELW88afQYvxgfDEDE0Ta/bMYYwLS/OcD36ao/WcuMP0aK8L/67/S9PWdtv9siBL9bSDhALrCBP8JgAD/2cee+XgB0P5PkMECec9I+mvjnPnS6Z7/4Ar+/6xa6P2o8KEBMAdy/M3V2vxoEHj4GBMg+Boh0P2xvcD+lge0/TVOKP4mrcb8RfjBARF4ePk5fBL9MUSK/Gf+uPiDXOr83Vo8/JXjJv42s9j9DeJy/I0zpv2X7Vb97HdS/LNRZv/zlXkAGQKq/TlIJwP8fpb9kjZK/GsMovTZ3PEDeydm/6XUhP0TchL9OJGFA8K5SPyDq1D/OS3Q/06W7P3ATGkBmP+s7kI6SvwhC8T/oxyk/LkTYPu8opb/0Woe+g4DvPpyDD0BiUXhABDo0wLdSBkCI8Vy+2u2sPwxkA8AcgFvA1Qdpv3w/uT/AFTjAsmhyQAtx/z+FIVPACTIEPzN5vL9WD+g/i6fvvrQ80j5B2IE/NxoNwHpdjb9RR+E/6ZsvwNad8z9oDL0/mNfVvgXRLMCOOxJA46SgP0ijQD81C0DA3gbRvmkrNkD/E6s/OCUjvBcAnD6M6rS/E9taP6goBsBmx10+mwRRP62Syj/gfIu9eUACQC/WLLuy1+s/ufglP5r0+L9ByirAQkoXvzcR6L+Ifcw/aUNkPtERDD88we6/eML/v8AJmT2+Pbe/bldBQKocOL9chfs+thQDQHTDxz/vYag/8ET+v7mAwT9y8ni/xqqqv1j6eb+80rG/8xkGQMCPub/gCRPAxiiZP7JUpr4ldiS++Hu2P28Tqj8kJaU+GCcoP+CgcD8E9sK/POnuP5DwDD8nzV1AJy8xQCwVhjvGWY47VloqwJdxtj8glyDAjJVWQAJQEEDlC5c/232Kv0PAL8C4Szc/TnUnvzPZZMACLwS/AfcEwOgpiD9jGcK9sLDPv3pJG750kjQ+CzzFv3Fqor0Z7FrAF2Shv0PfKkDtvdy/H2UpwG/SJMASsFU7MO5TvjB4rD8WmiW+tOspQAZvHz/R0yVAWwGCv9V8iT9CPk9AYhEhvalEbUBk8ag/lfVLQDcsNcCASDU//PrWPmNKGr9hkgg/OqqFv1xMgz8HG/2/62wKvwdxZ0C3QLA+hbIovv7Jrj32RaU/ZnkEwG9pnz+IRSvAHFRsQHXSA0DfroS/fYHcPyCFzj20R7M+52N3P52Aur8gLzXAybUHvxxxkcASUAtAXlqpP+q4ij9dvDy/VGG4PxG7Xz8nzce/yt0xP3nlwz7X0+q94QstQDZ0rr84EVE8O7IGwHH+X0AUzZBATti4v85Tmj8pvH5AW8/7vww7vD6nqWE/cKdQQBb0esB6HPU/wErYP2HItz++WVJAu30CwE4pTb8IHDs/kaqZvnWtTj8Y6Z4/owrJvwQyHL84GYi/jDKhP5BBfT2MQDBAh9O7v3TgkL/q1K8/2JViP45nub/dm8m8erFrwI9YAsC/dHc/Qev2vJf81b6s45XAHb+0viVzgD90HtA/p2EsvzzPpD7uYmbAxg0NwFkkgT68Zuc/Z0ApwPz9lT86G5A/DYXOPqnq9b9MhYA/VI5zv1ZFY8B9G+c/7A6BP8ynu7/sdJK/km2gPk3w4z/XOzC/QLmFvxSxPcDRUQPAHRY5QLeg3b/gIkVASMFCQASpbL4O7SjA2asfwHOX4L602DY+JP4JQPZX4T01RhJA31L1P1tRzb51KS++QA6IQP4g8r8xLLS/gCIAwIczlz/djIQ+eniLvyZJK7//j82/IixIP6msib+omzG/bl0dv1NiDMClhPy/Doy6v+Hlj7+tvvE/6ZeVP4AXJ0CkNiHATvZnP0iC1b8X/gxATQeVvyr3HcA4w8S/fEAtvtVTSD7TQPe/qWN2wHZbO77QKBJA89sAwAD2ZT4jP5G+vJcMwIu9pD4hXzPA+ppIPwhN8T9WziC/qS2hvm97CsAHLdE9/JfBvSCbsD5HAcm9bJBlvVBYiUAaIPG/oaGRPwcuAkDeKsU/rFnTvSvgVUAHNTFA9PzIPptiXUDfR7U/npGKP3vvEz8Ru2O/3n0jwFQmoL9UjhHAAAwewBLcBUA1Spe+j6gCwIi57j8XdBJAqMuYv57lxL7+Sno/c5zJv6AcEcDikKE/Z/omQL+E/b9OJ/M/t3RJQFRM0L8oAHs+Nt7VPcq/5D85pYG/Nz3hPj81zT97kt8+8GpePqBYOL/Xocm/Onk4QJ1gMsCgkQM/R9knQMVV7L7wEwDA+A+cPzW0iz8PBaM+Lgnuvs+2LECOfhjAuyRAvm7ZAEDr5KS/E7c8QNIFaUBMuTrAegmIv0nkzL5U1ThARuk2P/4GJb+2uYs+TkP1vxidrb40O8C/CrVRQF29D74Aho6/rqqMv8X9qb8Q3gXAXbpgv5Tv5z9u0ge+0aIQv1+8abs3HU5Ax5EsP8FlTj/iu4E/zI0ZP377K7/yefW+x/KAQKyzRUCu8kbAk+A0wDaSiUC3sZm9kPjivqDwFz4SNEg+gzpRwB43UL9k4vI/BnE/QG1Ng8CpylU/2WK4P44zsz+4MAE/eKeAPpvpiUDpkT6/5cRqwCL8I0Dhg0ZAItqnvwL65r/d0Ao/8ykaP5YRq70xmzVA0oIGQMP6Sr8uxR5ALeuYv64vxD6FhwBApajQv9iYYD/VoLo/gajsPu4ZLcBU3WI+Hjzjv0rwzj9Clo5AIcX5PiSMwD6plto9FtpxvJpKQb9+Ke4/A6Evvs4OcMBFHTtAAvhOwOGjDsAwZja/T0xfv6wAXT77dRnAKbyCwCizJz/aQwHA0F7Yv3k3rD4Z66Y+vrNHP/h7CEDZCfy/8oySPzJ22j+o/bK+8ZEYwA06zT4+Epu/Zhs7Pk+DlD+ST5E/RoDHPrAoZj7T6Hs/dqzCvhYl3D+GKgvA",
        "encoding": "base64",
        "path": [
         "x",
         0,
         "data"
        ]
       },
       {
        "data": "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",
        "encoding": "base64",
        "path": [
         "y",
         0,
         "data"
        ]
       },
       {
        "data": "e6MLv2LwFL7oS7W/X+C9v/Kyoj+d3i1ALrZiQLnikz7Ydpo/rgKlPm6XLT8EWBZAFUCxPrlHAz9uGlA/YJWiv4Y/cMBdCVXAfx8sv+fVrD/sLJK/AFkfv3qLrj+14YW+wt5PwFQk/r8fQY6/flCFPzVvzr+Me2o/XriZvLth/76qIZu/SFq/PkqF6L+LMYVAh9ibP+kqJ8D7E2O93xHHPXdUvT2zzyrAQxMNP9iofL8thXw/XEnkvmyRdD6aPBdAKpVwP2YkxT8NHQbA/vDAPVQytL+cgpu/INvyvybppj+szyzAUFGiP6jo8b/BJ0o++O22PkqMjz9D5AfAhfGQvhzBVr7TVu+/WP2GP/tpYb8HBt8+F3AAQH0hqr/pMKC+W1dEvwdvqz8th7s9hx9UP0HfB8CAzT6/3ErkPir7m7+xkJq+sdiGv800hT9UE4G9hJXrPoCxub9RXfc/l4NvwO2NEsDUDqQ/F8YAwKxJyL+H55a/vzYfwM6NSkBwkwJANTt5v9kuN0D0vxlACKLuv1vzGEBAYmLA8Iu8vx6pqT/BkzRAaqsDvxT2Nb+Q+3U/9QLkvz13sL6+UApAAHKvv+pd7z+bi7M/V9swQBUR1T8N6kG/nbnPO4eMQEBo336+b5A2P2WyAUCZpyjAfitpQA6IGT5Xr1w/UmxyQMbZDUCGGoq/ukyEPxah9r4Rer+/hRDcPdx4gT9ugEi/VWbTvtjWz79Uc6q/zrSCv4WwbT61TShApa+ZP/xtIL+GZa0/RqdRvuQRVz8qkL0/q7sPQG0skD+2MWpAZiwnv9PZ3zu8j5e/6KHRPztLnL8lsti/TSHDvgA7Zj5aFW2+KMClvxRuOj7W5RLAS0YDvmkAnD8uFAnAllE3QGPCBcARdu6/gqcUP0x9wDzK7jlAFnQPwJI1QMAJ/Wu/eIbEPmVyT7903PC/SUOKQLIY0b4+jkLAvZyHwNuBOr/EK7W/RcylPUE5P77hXlrAL9A3v++zQT0L6BY/qOYxwLGuHUBKTYC/49gFvqCLGD/iZ/6+EGwewDEEgT0PgsI+0vRKvyseX74NtIA9jZi/P5ea0D8buAfAmviFP9D7XkBWdPQ/eqBHQJadUsBTrFRACVEZQN+L0L/ul3O/XxQzwE14CkAPjme/AkWeP5JfkMCrFos/SYsqwL5nhj9+yak/RCXUv9QGgT9/TQnAHJb4P+bJLb8sjLg/OnUJQP/f+r9QxeE/N8vUv0Shib5BEfa/XjevviPZHcCFHD3ANxtPwL4SiL9iHVw/fXO9P1HLM71mmxY+AQscQG6oN8C8kX0/tasyv1ObKsBHaXW+hV1CP47NKz4ba4E/dWmZv47Et74vq6E/ywWHPdT1D8CsSKC/IYyzPIU6qj4mhVU+cU18QL/0Gr/GpI6/jCWavxt9rr/Z86e+hNv7P1bKHcDnukRAZ4VowLCQQLpSvoS/Xai3vzol+b7YoEQ/K4VzPxq+LL9Hvqo/aONvv+pEuT8g0Ji+KVmZvwc6RkCJGA0/cBEHQBemmL4T1pDAcmavvyCHWEAbC+W/sovEPlG35L8Z3gO/kZs/wB2Bcz9evL294nLdP2BQMD++ebs+kmHNvv+w3z9iZn88oiGmv6UP7T9rLj3AsXnbPpq2qD/QOJ+/L3ptP0hNyD8qv2W/vrFWPxqerz8z8QQ/S9NBP0DErL8AqI4/1R7Su86uOkC4+24/+78IQEpJJb11gZG/zz6bvwgrST5z/qY/Zgr0P3SJor91fUnAy12sv+TTzj/Lmy/AKL8YQPBKFb9EnvS/eQSfv+rbLj+/SDa/+kqxPqyGSsC34y4+NWSFPzsaLj/6nqm+gtS2v59aDb5paJU/W84ywE/WqD++oXe/a4gkPtxKMz7Ouge/hVoXQDhyMj8fluq/S0AIv61FV7+JlDbApmv/vrLXtT8FCCS/Ls6UP+ep3js7ksI+V5RaPk3sdcB69IM/Cba2vnJAe79yvO0/1+6EP/Qvtr7Vgo4/ZXJRQGi98T9muwK+dHEpQM23EcAm7Z8/gfrnPzEhDkDsokc/nMOMP/OtTL4OLRY/a5OUP1c1Az7dvVFAsnxsP2ZnyL40xdm/evwGQOzrDEBvAVTAXoDRPgAvD8CuKLG+aoDQvfLAIUA1U17ADAbkvgb99T6x/Bq/A1RKQM/rqD8G12i/i3tKv4ncEUBDJjJA0WffPxDk6z9uDznAlLM6QEqRAMB9yQTAHq/iP3ZA+z5Qohy/CHEtP+x8bT9RXnvAGB56PwYcYr+XoZ0+94N7P05uIsAp0WM/pKzwPpUuZUBduVY/VHyJv6ItBUBuVyfAuY3XPzHpF8CVUY2/hz4XP5Aegb+gPTRAGt6LPpY3J8C76iNAqj0/v0cZyD4JD9s/ZPK0v+zfncDMei4/jpMlQB7Ui0DhwYA/byy6vy+s+j+bm/K9LyQ6wFq3vz9ei4lA8vaSwAvA5j9h+qU+dGonv32xkb8KG+m+gJ7hvFsTPUCQEE8/iaJWQJiwiLpnQYm/B57qP77jrr6dnI++s+lzQKqhyr936+0+l3F0wJi5Lr8bZiFADgMCwN/jy79+Tz4+icEswMG8yr9Nm7A9AB8jvnmSUr6ZJiq+ByolwCaZ3z4yFVa/A+tIvyoHvD+/oOi/JJP3v80GHT5eeJ4/MQ0YwMSOBb0W3Do/YLfBPzTsrzxs00G/aJfuPYmpfDxBTRQ/wGfCPkDxiL+tnxlANr0mvr6igj8nGYJA6wulPiXhib9unRnA8lNqQFfpXz/gdtY/kzHrPzuRF0BvBbO/Gg6Av43fgT+tQeQ/SoZ7v1AMHcDVjB2+I8Q4vuAiT7+sdmpA1/4Dv189XsCnIVg+nCpnP4Fgpz9TsIDAY5iGv6N/mL9sr/8+RnssQNZA7T8iPOE/2sKvvlieOD/HdvE/G2QfPYd5z77i+IW/HTqdP99oHkD6YZ0/Kn76vtC2/j+rmxY+b/BHP41U1D6vL8M/K1Kkv3Pj4r5ojWO/HvmZPg3pTkBjNIO+ML0VQJG0DD77scw/5eXcvjlm8L6E5gJALaCOvoQRAsDotra/rBrMPydu3j+RCjm/uUMAvW/2Lj13tkxARu6vv07xWz/v4/I//YubP4eGeD9x8IQ+lYJnvzRX6L/VFIm/CgSdP66jkj+N9m0/iU6yPyVmOkBgDy+/MRF3P57Rkb8WwMk/oHnzP9Futb5IZGA/En96v7/5fTt98vU+dCmovxtpIT/dFAM/n7GGP4IhOkCt8yc/",
        "encoding": "base64",
        "path": [
         "z",
         0,
         "data"
        ]
       }
      ],
      "model_module": "ipyvolume",
      "model_module_version": "~0.5.2",
      "model_name": "ScatterModel",
      "state": {
       "_model_module": "ipyvolume",
       "_model_module_version": "~0.5.2",
       "_model_name": "ScatterModel",
       "_view_count": null,
       "_view_module": "ipyvolume",
       "_view_module_version": "~0.5.2",
       "_view_name": "ScatterView",
       "color": [
        {
         "dtype": "float32",
         "shape": [
          609,
          4
         ]
        }
       ],
       "color_selected": "white",
       "connected": false,
       "geo": "sphere",
       "line_material": "IPY_MODEL_3a6172d1d4324ca69f781794e66bd590",
       "material": "IPY_MODEL_42de112e24804db9af23a8ce204a4127",
       "selected": null,
       "sequence_index": 0,
       "size": 2,
       "size_selected": 2.6,
       "texture": null,
       "visible": true,
       "vx": null,
       "vy": null,
       "vz": null,
       "x": [
        {
         "dtype": "float32",
         "shape": [
          609
         ]
        }
       ],
       "y": [
        {
         "dtype": "float32",
         "shape": [
          609
         ]
        }
       ],
       "z": [
        {
         "dtype": "float32",
         "shape": [
          609
         ]
        }
       ]
      }
     },
     "0753442d8b764db8a54df19b432670a0": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "StyleView",
       "bar_color": "#B833FF",
       "description_width": ""
      }
     },
     "0946e5b01cc2489d9f0fee0880dd3030": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "DescriptionStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "DescriptionStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "StyleView",
       "description_width": ""
      }
     },
     "1192322c21f149af8a66ab2febedd1d4": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "DescriptionStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "DescriptionStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "StyleView",
       "description_width": ""
      }
     },
     "1a240ed1021e4afd8bcce8b69ae94e97": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "1.5.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_tooltip": null,
       "layout": "IPY_MODEL_84482de180ec4f05b2acf3bf5c13c669",
       "placeholder": "​",
       "style": "IPY_MODEL_ba1139591387432b9ecb84afc8a778df",
       "value": "Drawing distances: 100%"
      }
     },
     "1e4af820cbb746f8a6405f4a4e5a1074": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "1.5.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_tooltip": null,
       "layout": "IPY_MODEL_b01b434e99f94bf89e73f963c73f996a",
       "placeholder": "​",
       "style": "IPY_MODEL_0946e5b01cc2489d9f0fee0880dd3030",
       "value": "Drawing distances: 100%"
      }
     },
     "239ec3c656334645a17f5934c61298ec": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "24a5d28246c84a24b14cc98c6dcc68bf": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "DescriptionStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "DescriptionStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "StyleView",
       "description_width": ""
      }
     },
     "24f4a4f445894cf4b6cbc2a133c12f93": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "1.5.0",
       "_view_name": "ProgressView",
       "bar_style": "success",
       "description": "",
       "description_tooltip": null,
       "layout": "IPY_MODEL_bf04eab9ab38448b8196669a4eac301e",
       "max": 2567.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_0753442d8b764db8a54df19b432670a0",
       "value": 2567.0
      }
     },
     "2c0b71d81ec14545854259391796a59a": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "StyleView",
       "bar_color": "#B833FF",
       "description_width": ""
      }
     },
     "3760014f967a4aebb0f9c5ec975efbee": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "3a6172d1d4324ca69f781794e66bd590": {
      "model_module": "jupyter-threejs",
      "model_module_version": "^2.1.0",
      "model_name": "ShaderMaterialModel",
      "state": {
       "_model_module": "jupyter-threejs",
       "_model_module_version": "^2.1.0",
       "_model_name": "ShaderMaterialModel",
       "_view_count": null,
       "_view_module": null,
       "_view_module_version": "",
       "_view_name": null,
       "alphaTest": 0.0,
       "blendDst": "OneMinusSrcAlphaFactor",
       "blendDstAlpha": 0.0,
       "blendEquation": "AddEquation",
       "blendEquationAlpha": 0.0,
       "blendSrc": "SrcAlphaFactor",
       "blendSrcAlpha": 0.0,
       "blending": "NormalBlending",
       "clipIntersection": false,
       "clipShadows": false,
       "clipping": false,
       "clippingPlanes": [],
       "colorWrite": true,
       "defines": null,
       "depthFunc": "LessEqualDepth",
       "depthTest": true,
       "depthWrite": true,
       "dithering": false,
       "extensions": {},
       "flatShading": false,
       "fog": false,
       "fragmentShader": "",
       "lights": false,
       "linewidth": 1.0,
       "morphNormals": false,
       "morphTargets": false,
       "name": "",
       "opacity": 1.0,
       "overdraw": 0.0,
       "polygonOffset": false,
       "polygonOffsetFactor": 0.0,
       "polygonOffsetUnits": 0.0,
       "precision": null,
       "premultipliedAlpha": false,
       "shadowSide": null,
       "side": "FrontSide",
       "skinning": false,
       "transparent": false,
       "type": "ShaderMaterial",
       "uniforms": {},
       "uniformsNeedUpdate": false,
       "vertexColors": "NoColors",
       "vertexShader": "",
       "visible": true,
       "wireframe": false,
       "wireframeLinewidth": 1.0
      }
     },
     "3d58ac77b6284565bee47b83e8e3580e": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "1.5.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_65307a9697214bd28873d6a360fb9e24",
        "IPY_MODEL_0177c115277943408e6371a56932e944",
        "IPY_MODEL_4f3f9e53af4b4215a051745fab1c0c5d"
       ],
       "layout": "IPY_MODEL_9daffc75d0ef41689c1fb287de563a98"
      }
     },
     "42de112e24804db9af23a8ce204a4127": {
      "model_module": "jupyter-threejs",
      "model_module_version": "^2.1.0",
      "model_name": "ShaderMaterialModel",
      "state": {
       "_model_module": "jupyter-threejs",
       "_model_module_version": "^2.1.0",
       "_model_name": "ShaderMaterialModel",
       "_view_count": null,
       "_view_module": null,
       "_view_module_version": "",
       "_view_name": null,
       "alphaTest": 0.0,
       "blendDst": "OneMinusSrcAlphaFactor",
       "blendDstAlpha": 0.0,
       "blendEquation": "AddEquation",
       "blendEquationAlpha": 0.0,
       "blendSrc": "SrcAlphaFactor",
       "blendSrcAlpha": 0.0,
       "blending": "NormalBlending",
       "clipIntersection": false,
       "clipShadows": false,
       "clipping": false,
       "clippingPlanes": [],
       "colorWrite": true,
       "defines": null,
       "depthFunc": "LessEqualDepth",
       "depthTest": true,
       "depthWrite": true,
       "dithering": false,
       "extensions": {},
       "flatShading": false,
       "fog": false,
       "fragmentShader": "",
       "lights": false,
       "linewidth": 1.0,
       "morphNormals": false,
       "morphTargets": false,
       "name": "",
       "opacity": 1.0,
       "overdraw": 0.0,
       "polygonOffset": false,
       "polygonOffsetFactor": 0.0,
       "polygonOffsetUnits": 0.0,
       "precision": null,
       "premultipliedAlpha": false,
       "shadowSide": null,
       "side": "FrontSide",
       "skinning": false,
       "transparent": false,
       "type": "ShaderMaterial",
       "uniforms": {},
       "uniformsNeedUpdate": false,
       "vertexColors": "NoColors",
       "vertexShader": "",
       "visible": true,
       "wireframe": false,
       "wireframeLinewidth": 1.0
      }
     },
     "49ed688d6fc4433883c6771f9c063c85": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "4f3f9e53af4b4215a051745fab1c0c5d": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "1.5.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_tooltip": null,
       "layout": "IPY_MODEL_7d015f268140403d9fcfdfe2c551621e",
       "placeholder": "​",
       "style": "IPY_MODEL_94c9e77e2dd5445585fce03a785c9124",
       "value": " 2567/2567 [00:00&lt;00:00, 28841.31it/s]"
      }
     },
     "52366b1d3aaf463fbe433b1d642a6297": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "555dde75c3164a9c84b99ad4623413f0": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "6221385801a64bbea8490d83a0853b37": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "6225240b0a954166b73e74118f81abec": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "DescriptionStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "DescriptionStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "StyleView",
       "description_width": ""
      }
     },
     "65307a9697214bd28873d6a360fb9e24": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "1.5.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_tooltip": null,
       "layout": "IPY_MODEL_d478474ce19644c1b3304720ea1eb9c3",
       "placeholder": "​",
       "style": "IPY_MODEL_6225240b0a954166b73e74118f81abec",
       "value": "Drawing distances: 100%"
      }
     },
     "76e6b009ba2148818b80db6c0e50f8e6": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "76ec56e9798249b3bd8d4f397a7addd8": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "1.5.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_1e4af820cbb746f8a6405f4a4e5a1074",
        "IPY_MODEL_24f4a4f445894cf4b6cbc2a133c12f93",
        "IPY_MODEL_0563123264b14714b9a1b9abe192c416"
       ],
       "layout": "IPY_MODEL_7cabeb5e7ea94bb2a5ea94f7b90727bd"
      }
     },
     "7cabeb5e7ea94bb2a5ea94f7b90727bd": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "7d015f268140403d9fcfdfe2c551621e": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "81efada57a524b009c73f16cccd77058": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "84482de180ec4f05b2acf3bf5c13c669": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "84e0899d14f94b1c98e04903cc57450f": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "1.5.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_dd6102ebb0184ec2b66647aaf05944ee",
        "IPY_MODEL_90d0128522634a13b4baf8c867cbe97f",
        "IPY_MODEL_02bff696b6984ff7bf01841e1b57fc30"
       ],
       "layout": "IPY_MODEL_3760014f967a4aebb0f9c5ec975efbee"
      }
     },
     "8522aeb3feb44050be23cbdbe06f555a": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "DescriptionStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "DescriptionStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "StyleView",
       "description_width": ""
      }
     },
     "8b6c46767f054b5aaa3e7d2158778091": {
      "model_module": "jupyter-threejs",
      "model_module_version": "^2.1.0",
      "model_name": "PerspectiveCameraModel",
      "state": {
       "_model_module": "jupyter-threejs",
       "_model_module_version": "^2.1.0",
       "_model_name": "PerspectiveCameraModel",
       "_view_count": null,
       "_view_module": null,
       "_view_module_version": "",
       "_view_name": null,
       "aspect": 1.0,
       "castShadow": false,
       "children": [],
       "far": 2000.0,
       "focus": 10.0,
       "fov": 46.0,
       "frustumCulled": true,
       "matrix": [
        1.0,
        0.0,
        0.0,
        0.0,
        0.0,
        1.0,
        0.0,
        0.0,
        0.0,
        0.0,
        1.0,
        0.0,
        0.0,
        0.0,
        0.0,
        1.0
       ],
       "matrixAutoUpdate": true,
       "matrixWorld": [
        1.0,
        0.0,
        0.0,
        0.0,
        0.0,
        1.0,
        0.0,
        0.0,
        0.0,
        0.0,
        1.0,
        0.0,
        0.0,
        0.0,
        0.0,
        1.0
       ],
       "matrixWorldInverse": [
        1.0,
        0.0,
        0.0,
        0.0,
        0.0,
        1.0,
        0.0,
        0.0,
        0.0,
        0.0,
        1.0,
        0.0,
        0.0,
        0.0,
        0.0,
        1.0
       ],
       "matrixWorldNeedsUpdate": false,
       "modelViewMatrix": [
        1.0,
        0.0,
        0.0,
        0.0,
        0.0,
        1.0,
        0.0,
        0.0,
        0.0,
        0.0,
        1.0,
        0.0,
        0.0,
        0.0,
        0.0,
        1.0
       ],
       "name": "",
       "near": 0.1,
       "normalMatrix": [
        1.0,
        0.0,
        0.0,
        0.0,
        1.0,
        0.0,
        0.0,
        0.0,
        1.0
       ],
       "position": [
        0.0,
        0.0,
        2.0
       ],
       "projectionMatrix": [
        1.0,
        0.0,
        0.0,
        0.0,
        0.0,
        1.0,
        0.0,
        0.0,
        0.0,
        0.0,
        1.0,
        0.0,
        0.0,
        0.0,
        0.0,
        1.0
       ],
       "quaternion": [
        0.0,
        0.0,
        0.0,
        1.0
       ],
       "receiveShadow": false,
       "renderOrder": 0,
       "rotation": [
        0.0,
        0.0,
        0.0,
        "XYZ"
       ],
       "scale": [
        1.0,
        1.0,
        1.0
       ],
       "type": "PerspectiveCamera",
       "up": [
        1.0,
        0.0,
        0.0
       ],
       "visible": true,
       "zoom": 1.0
      }
     },
     "90d0128522634a13b4baf8c867cbe97f": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "1.5.0",
       "_view_name": "ProgressView",
       "bar_style": "success",
       "description": "",
       "description_tooltip": null,
       "layout": "IPY_MODEL_bde9a9c5e06b43a3bd3d8d82ded84f22",
       "max": 5.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_d6e6f05ee7df4060a3fd3557df21edfa",
       "value": 5.0
      }
     },
     "944be7b1ace5428dab500566c27ce9bd": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "1.5.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_tooltip": null,
       "layout": "IPY_MODEL_555dde75c3164a9c84b99ad4623413f0",
       "placeholder": "​",
       "style": "IPY_MODEL_1192322c21f149af8a66ab2febedd1d4",
       "value": " 5/5 [00:00&lt;00:00, 238.38it/s]"
      }
     },
     "94c9e77e2dd5445585fce03a785c9124": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "DescriptionStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "DescriptionStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "StyleView",
       "description_width": ""
      }
     },
     "9daffc75d0ef41689c1fb287de563a98": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "a35ff7a5beab46818017c27f9e637200": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "1.5.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_1a240ed1021e4afd8bcce8b69ae94e97",
        "IPY_MODEL_d2fa132c439d48e59fc2650f2b0204d6",
        "IPY_MODEL_944be7b1ace5428dab500566c27ce9bd"
       ],
       "layout": "IPY_MODEL_f5647c7142434a38acd78c5a318b45d0"
      }
     },
     "b01b434e99f94bf89e73f963c73f996a": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "ba1139591387432b9ecb84afc8a778df": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "DescriptionStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "DescriptionStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "StyleView",
       "description_width": ""
      }
     },
     "bc8d6f1b57f24da29d8b1017e3129ad5": {
      "model_module": "jupyter-threejs",
      "model_module_version": "^2.1.0",
      "model_name": "SceneModel",
      "state": {
       "_model_module": "jupyter-threejs",
       "_model_module_version": "^2.1.0",
       "_model_name": "SceneModel",
       "_view_count": null,
       "_view_module": null,
       "_view_module_version": "",
       "_view_name": null,
       "autoUpdate": true,
       "background": null,
       "castShadow": false,
       "children": [],
       "fog": null,
       "frustumCulled": true,
       "matrix": [
        1.0,
        0.0,
        0.0,
        0.0,
        0.0,
        1.0,
        0.0,
        0.0,
        0.0,
        0.0,
        1.0,
        0.0,
        0.0,
        0.0,
        0.0,
        1.0
       ],
       "matrixAutoUpdate": true,
       "matrixWorld": [
        1.0,
        0.0,
        0.0,
        0.0,
        0.0,
        1.0,
        0.0,
        0.0,
        0.0,
        0.0,
        1.0,
        0.0,
        0.0,
        0.0,
        0.0,
        1.0
       ],
       "matrixWorldNeedsUpdate": false,
       "modelViewMatrix": [
        1.0,
        0.0,
        0.0,
        0.0,
        0.0,
        1.0,
        0.0,
        0.0,
        0.0,
        0.0,
        1.0,
        0.0,
        0.0,
        0.0,
        0.0,
        1.0
       ],
       "name": "",
       "normalMatrix": [
        1.0,
        0.0,
        0.0,
        0.0,
        1.0,
        0.0,
        0.0,
        0.0,
        1.0
       ],
       "overrideMaterial": null,
       "position": [
        0.0,
        0.0,
        0.0
       ],
       "quaternion": [
        0.0,
        0.0,
        0.0,
        1.0
       ],
       "receiveShadow": false,
       "renderOrder": 0,
       "rotation": [
        0.0,
        0.0,
        0.0,
        "XYZ"
       ],
       "scale": [
        1.0,
        1.0,
        1.0
       ],
       "type": "Scene",
       "up": [
        0.0,
        1.0,
        0.0
       ],
       "visible": true
      }
     },
     "bde9a9c5e06b43a3bd3d8d82ded84f22": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "bf04eab9ab38448b8196669a4eac301e": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "c066d19a883540198a8c56360b35cbd9": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "StyleView",
       "bar_color": "#B833FF",
       "description_width": ""
      }
     },
     "d0a3654ceacb4ce1ad57388aeef69aba": {
      "model_module": "jupyter-threejs",
      "model_module_version": "^2.1.0",
      "model_name": "OrbitControlsModel",
      "state": {
       "_model_module": "jupyter-threejs",
       "_model_module_version": "^2.1.0",
       "_model_name": "OrbitControlsModel",
       "_view_count": null,
       "_view_module": null,
       "_view_module_version": "",
       "_view_name": null,
       "autoRotate": true,
       "autoRotateSpeed": 2.0,
       "controlling": "IPY_MODEL_8b6c46767f054b5aaa3e7d2158778091",
       "dampingFactor": 0.25,
       "enableDamping": false,
       "enableKeys": true,
       "enablePan": true,
       "enableRotate": true,
       "enableZoom": true,
       "enabled": true,
       "keyPanSpeed": 7.0,
       "maxAzimuthAngle": "inf",
       "maxDistance": "inf",
       "maxPolarAngle": 3.141592653589793,
       "maxZoom": "inf",
       "minAzimuthAngle": "-inf",
       "minDistance": 0.0,
       "minPolarAngle": 0.0,
       "minZoom": 0.0,
       "panSpeed": 1.0,
       "rotateSpeed": 1.0,
       "screenSpacePanning": true,
       "target": [
        0.0,
        0.0,
        0.0
       ],
       "zoomSpeed": 1.0
      }
     },
     "d0efdf7cdb8a470e9a4f66cf84a8fdb9": {
      "model_module": "ipyvolume",
      "model_module_version": "~0.5.2",
      "model_name": "FigureModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "ipyvolume",
       "_model_module_version": "~0.5.2",
       "_model_name": "FigureModel",
       "_view_count": null,
       "_view_module": "ipyvolume",
       "_view_module_version": "~0.5.2",
       "_view_name": "FigureView",
       "ambient_coefficient": 0.5,
       "animation": 1000.0,
       "animation_exponent": 1.0,
       "camera": "IPY_MODEL_8b6c46767f054b5aaa3e7d2158778091",
       "camera_center": [
        0.0,
        0.0,
        0.0
       ],
       "camera_control": "trackball",
       "camera_fov": 45.0,
       "capture_fps": null,
       "cube_resolution": 512,
       "diffuse_coefficient": 0.8,
       "displayscale": 1.0,
       "downscale": 1,
       "eye_separation": 6.4,
       "height": 500,
       "layout": "IPY_MODEL_6221385801a64bbea8490d83a0853b37",
       "matrix_projection": [
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0
       ],
       "matrix_world": [
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0
       ],
       "meshes": [],
       "mouse_mode": "normal",
       "panorama_mode": "no",
       "render_continuous": true,
       "scatters": [
        "IPY_MODEL_062329f2aea34033bd5e82b0deb2f91d"
       ],
       "scene": "IPY_MODEL_bc8d6f1b57f24da29d8b1017e3129ad5",
       "selection_mode": "replace",
       "selector": "lasso",
       "show": "Volume",
       "specular_coefficient": 0.5,
       "specular_exponent": 5.0,
       "stereo": false,
       "style": {
        "axes": {
         "color": "white",
         "label": {
          "color": "white"
         },
         "ticklabel": {
          "color": "white"
         },
         "visible": false
        },
        "background-color": "black",
        "box": {
         "visible": false
        }
       },
       "volumes": [],
       "width": 400,
       "xlabel": "x",
       "xlim": [
        -5.0,
        5.0
       ],
       "ylabel": "y",
       "ylim": [
        -5.0,
        5.0
       ],
       "zlabel": "z",
       "zlim": [
        -5.0,
        5.0
       ]
      }
     },
     "d2fa132c439d48e59fc2650f2b0204d6": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "1.5.0",
       "_view_name": "ProgressView",
       "bar_style": "success",
       "description": "",
       "description_tooltip": null,
       "layout": "IPY_MODEL_52366b1d3aaf463fbe433b1d642a6297",
       "max": 5.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_2c0b71d81ec14545854259391796a59a",
       "value": 5.0
      }
     },
     "d478474ce19644c1b3304720ea1eb9c3": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "d6e6f05ee7df4060a3fd3557df21edfa": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "StyleView",
       "bar_color": "#B833FF",
       "description_width": ""
      }
     },
     "dd6102ebb0184ec2b66647aaf05944ee": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "1.5.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_tooltip": null,
       "layout": "IPY_MODEL_239ec3c656334645a17f5934c61298ec",
       "placeholder": "​",
       "style": "IPY_MODEL_24a5d28246c84a24b14cc98c6dcc68bf",
       "value": "Selecting Bernoulli: 100%"
      }
     },
     "df5d9a51e3394910bdb72daa26bc4110": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "VBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "VBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "1.5.0",
       "_view_name": "VBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_d0efdf7cdb8a470e9a4f66cf84a8fdb9"
       ],
       "layout": "IPY_MODEL_49ed688d6fc4433883c6771f9c063c85"
      }
     },
     "e0b5649b8af448d0b84d5d28dd0d8855": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "f5647c7142434a38acd78c5a318b45d0": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "ff77af7fb6db49cea7546b95245f0818": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "DescriptionStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "DescriptionStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "StyleView",
       "description_width": ""
      }
     }
    },
    "version_major": 2,
    "version_minor": 0
   }
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
